name: Docker Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to AWS ECR
        env:
          AWS_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin <aws-account-id>.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and Push Docker Image
        env:
          AWS_ACCOUNT_ID: "<your-aws-account-id>"
          AWS_REGION: "us-east-1"
        run: |
          docker build -t discord-bot .
          docker tag discord-bot:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/discord-bot:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/discord-bot:latest

      - name: Deploy on AWS EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/discord-bot:latest
            docker stop discord-bot || true
            docker rm discord-bot || true
            docker run -d --name discord-bot -e DISCORD_BOT_TOKEN="${{ secrets.DISCORD_BOT_TOKEN }}" $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/discord-bot:latest
